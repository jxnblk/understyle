{
  "name": "jxnblk/understyle",
  "version": "0.1.4",
  "libraries": {
    "xv": "^1.1.19"
  },
  "title": "Understyle",
  "branch": "",
  "style": {
    "name": "Swiss",
    "componentSet": {
      "nav": "nav/BasicNav",
      "header": "header/SwissHeader",
      "article": "article/SwissArticle",
      "footer": "footer/BasicFooter"
    },
    "fontFamily": "\"Helvetica Neue\", Helvetica, Arial, sans-serif",
    "heading": {
      "fontWeight": 700,
      "letterSpacing": "-0.01em"
    },
    "layout": {
      "fluid": true
    },
    "colors": {
      "text": "#000",
      "background": "#fff",
      "primary": "#05a",
      "secondary": "#444",
      "highlight": "#f30",
      "border": "#ccc",
      "muted": "#eee"
    }
  },
  "content": [
    {
      "component": "nav",
      "links": [
        {
          "href": "https://github.com/jxnblk/understyle",
          "text": "GitHub"
        },
        {
          "href": "https://npmjs.com/package/understyle",
          "text": "npm"
        }
      ]
    },
    {
      "component": "header",
      "heading": "understyle",
      "subhead": "Functional style utilities for authoring JavaScript style objects",
      "children": [
        {
          "component": "ui/TweetButton",
          "text": "understyle: Functional style utilities for authoring JavaScript style objects",
          "url": null
        },
        {
          "component": "ui/GithubButton",
          "user": "jxnblk",
          "repo": "understyle"
        }
      ],
      "text": "v1.2.0"
    },
    {
      "component": "article",
      "metadata": {
        "source": "github.readme"
      },
      "html": "\n\n<p><a href=\"https://travis-ci.org/jxnblk/understyle\"><img src=\"https://travis-ci.org/jxnblk/understyle.svg?branch=master\"></a>\n<a href=\"http://standardjs.com/\"><img src=\"https://img.shields.io/badge/code%20style-standard-brightgreen.svg\"></a></p>\n<pre>npm i understyle</pre><pre><span class=\"hljs-comment\">// Example</span>\n<span class=\"hljs-keyword\">import</span> _style <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;understyle&apos;</span>\n\n<span class=\"hljs-keyword\">const</span> style = _style({\n  m: <span class=\"hljs-number\">2</span>,\n  flex: <span class=\"hljs-literal\">true</span>\n})\n<span class=\"hljs-comment\">// { margin: 16, display: &apos;flex&apos; }</span></pre><h3>Usage in React, etc.</h3>\n<p>Understyle is intended for use in functional component-based UI systems, like React.\nIt can be used in any framework and for either inline styles or\nwith any CSS-in-JS library.</p>\n<pre><span class=\"hljs-comment\">// Example component</span>\n<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;react&apos;</span>\n<span class=\"hljs-keyword\">import</span> _style <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;understyle&apos;</span>\n\n<span class=\"hljs-keyword\">const</span> MyComponent = ({ children, ...props }) =&gt; {\n  <span class=\"hljs-keyword\">const</span> style = {\n    ..._style(props),\n    color: <span class=\"hljs-string\">&apos;tomato&apos;</span>\n  }\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{style}</span>&gt;</span>{children}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> MyComponent</pre><pre><span class=\"hljs-comment\">// Example component instance</span>\n<span class=\"hljs-keyword\">return</span> (\n  <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">MyComponent</span> <span class=\"hljs-attr\">p</span>=<span class=\"hljs-string\">{2}</span> <span class=\"hljs-attr\">mb</span>=<span class=\"hljs-string\">{4}</span>&gt;</span>\n      Hello\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">MyComponent</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n)</pre><h2>Props</h2>\n<p>The following keys can be passed in to understyle.</p>\n<h3>Display</h3>\n<pre>_style({ display: <span class=\"hljs-string\">&apos;block&apos;</span> })</pre><h3>Width</h3>\n<p>The <code>width</code> prop accepts number values.\nAny number larger than 1 is returned as a number, to be handled with React inline styles or other CSS-in-JS solutions.\nAny number between 0 and 1 will become a percentage width.</p>\n<pre>_style({ width: <span class=\"hljs-number\">1</span> / <span class=\"hljs-number\">2</span> }) <span class=\"hljs-comment\">// { width: &apos;50%&apos; }</span>\n_style({ width: <span class=\"hljs-number\">1</span> })     <span class=\"hljs-comment\">// { width: &apos;100%&apos; }</span>\n_style({ width: <span class=\"hljs-number\">64</span> })    <span class=\"hljs-comment\">// { width: 64 }</span></pre><h3>Margin</h3>\n<p>Margin props are set based on a spacing scale for numbers 1&#x2013;4.\nAny number above 4 will return the raw number value.</p>\n<pre>_style({\n  margin: <span class=\"hljs-number\">0</span>,        <span class=\"hljs-comment\">// margin: 0</span>\n  marginBottom: <span class=\"hljs-number\">3</span>,  <span class=\"hljs-comment\">// marginBottom: 32</span>\n  marginX: <span class=\"hljs-number\">12</span>       <span class=\"hljs-comment\">// marginLeft: 12, marginRight: 12</span>\n})</pre><p>Shorthand props are also available.</p>\n<pre>_style({\n  m: <span class=\"hljs-number\">0</span>,   <span class=\"hljs-comment\">// margin: 0</span>\n  mb: <span class=\"hljs-number\">3</span>, <span class=\"hljs-comment\">// marginBottom: 32</span>\n  mx: <span class=\"hljs-number\">12</span> <span class=\"hljs-comment\">// marginLeft: 12, marginRight: 12,</span>\n})</pre><h3>Padding</h3>\n<p>Padding also supports longform and shorthand keys.</p>\n<pre>_style({\n  p: <span class=\"hljs-number\">0</span>,   <span class=\"hljs-comment\">// padding: 0</span>\n  paddingLeft: <span class=\"hljs-number\">2</span>, <span class=\"hljs-comment\">// paddingLeft: 16</span>\n  py: <span class=\"hljs-number\">48</span>  <span class=\"hljs-comment\">// paddingTop: 48, paddingBottom: 48</span>\n})</pre><h3>Typography</h3>\n<pre>_style({\n  fontSize: <span class=\"hljs-number\">16</span>,     <span class=\"hljs-comment\">// fontSize: 16</span>\n  align: <span class=\"hljs-string\">&apos;center&apos;</span>,  <span class=\"hljs-comment\">// textAlign: &apos;center&apos;</span>\n  bold: <span class=\"hljs-literal\">true</span>,       <span class=\"hljs-comment\">// fontWeight: &apos;bold&apos;</span>\n  caps: <span class=\"hljs-literal\">true</span>,       <span class=\"hljs-comment\">// textTransform: &apos;uppercase&apos;, letterSpacing: &apos;.1em&apos;</span>\n})</pre><p>Font size also accepts numbers representing steps on the configured type scale, for any number below 7</p>\n<pre>_style({ fontSize: <span class=\"hljs-number\">1</span> })\n<span class=\"hljs-comment\">// fontSize: 48</span></pre><h3>Flexbox</h3>\n<pre>_style({\n  flexWrap: <span class=\"hljs-string\">&apos;wrap&apos;</span>,     <span class=\"hljs-comment\">// flexWrap: &apos;wrap&apos;</span>\n  alignItems: <span class=\"hljs-string\">&apos;center&apos;</span>, <span class=\"hljs-comment\">// alignItems: &apos;center&apos;</span>\n  justifyContent: <span class=\"hljs-string\">&apos;space-between&apos;</span>, <span class=\"hljs-comment\">// justifyContent: &apos;space-between&apos;</span>\n  flexDirection: <span class=\"hljs-string\">&apos;column&apos;</span>, <span class=\"hljs-comment\">// flexDirection: &apos;column&apos;</span>\n  flexAuto: <span class=\"hljs-literal\">true</span>,       <span class=\"hljs-comment\">// flex: &apos;1 1 auto&apos;</span>\n  flexNone: <span class=\"hljs-literal\">true</span>,       <span class=\"hljs-comment\">// flex: &apos;none&apos;</span>\n})</pre><h3>Color</h3>\n<p>Color props accept strings as either keys from the configured\ncolor object or raw color values.</p>\n<pre>_style({\n  color: <span class=\"hljs-string\">&apos;blue&apos;</span>, <span class=\"hljs-comment\">// color: &apos;#07c&apos;</span>\n  backgroundColor: <span class=\"hljs-string\">&apos;tomato&apos;</span>, <span class=\"hljs-comment\">// color: &apos;tomato&apos;</span>\n  borderColor: <span class=\"hljs-string\">&apos;#eee&apos;</span>, <span class=\"hljs-comment\">// color: &apos;#eee&apos;</span>\n})</pre><h3>Border</h3>\n<pre>_style({ border: <span class=\"hljs-literal\">true</span> })\n<span class=\"hljs-comment\">// border: &apos;1px solid&apos;</span>\n\n_style({ border: <span class=\"hljs-literal\">false</span> })\n<span class=\"hljs-comment\">// border: 0</span>\n\n_style({ border: <span class=\"hljs-number\">3</span> })\n<span class=\"hljs-comment\">// border: &apos;3px solid&apos;</span>\n\n_style({ borderTop: <span class=\"hljs-literal\">true</span> })\n<span class=\"hljs-comment\">// borderTop: &apos;1px solid&apos;</span>\n\n_style({ borderRight: <span class=\"hljs-literal\">true</span> })\n<span class=\"hljs-comment\">// borderRight: &apos;1px solid&apos;</span>\n\n_style({ borderBottom: <span class=\"hljs-literal\">true</span> })\n<span class=\"hljs-comment\">// borderBottom: &apos;1px solid&apos;</span>\n\n_style({ borderLeft: <span class=\"hljs-literal\">true</span> })\n<span class=\"hljs-comment\">// borderLeft: &apos;1px solid&apos;</span></pre><h3>Border Radius</h3>\n<pre>_style({ rounded: <span class=\"hljs-literal\">true</span> })\n<span class=\"hljs-comment\">// borderRadius: 2</span>\n\n_style({ rounded: <span class=\"hljs-literal\">false</span> })\n<span class=\"hljs-comment\">// borderRadius: 0</span>\n\n_style({ rounded: <span class=\"hljs-string\">&apos;top&apos;</span> })\n<span class=\"hljs-comment\">// borderRadius: &apos;2px 2px 0 0&apos;</span>\n\n_style({ rounded: <span class=\"hljs-string\">&apos;right&apos;</span> })\n<span class=\"hljs-comment\">// borderRadius: &apos;0 2px 2px 0&apos;</span>\n\n_style({ rounded: <span class=\"hljs-string\">&apos;bottom&apos;</span> })\n<span class=\"hljs-comment\">// borderRadius: &apos;0 0 2px 2px&apos;</span>\n\n_style({ rounded: <span class=\"hljs-string\">&apos;left&apos;</span> })\n<span class=\"hljs-comment\">// borderRadius: &apos;2px 0 0 2px&apos;</span></pre><h3>Responsive Styles</h3>\n<p>All props accept arrays to set styles for multiple breakpoints,\nwhere the first value is no breakpoint,\nthen the following values are from the small breakpoint up,\nfor a mobile-first styling approach.</p>\n<pre>_style({\n  width: [\n    <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-number\">1</span> / <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-number\">1</span> / <span class=\"hljs-number\">3</span>,\n    <span class=\"hljs-number\">1</span> / <span class=\"hljs-number\">4</span>,\n  ]\n})\n<span class=\"hljs-comment\">// {</span>\n<span class=\"hljs-comment\">//   width: &apos;100%&apos;,</span>\n<span class=\"hljs-comment\">//   &apos;@media screen and (min-width:40em)&apos;: {</span>\n<span class=\"hljs-comment\">//     width: &apos;50%&apos;</span>\n<span class=\"hljs-comment\">//   },</span>\n<span class=\"hljs-comment\">//   &apos;@media screen and (min-width:52em)&apos;: {</span>\n<span class=\"hljs-comment\">//     width: &apos;33.333333%&apos;</span>\n<span class=\"hljs-comment\">//   },</span>\n<span class=\"hljs-comment\">//   &apos;@media screen and (min-width:64em)&apos;: {</span>\n<span class=\"hljs-comment\">//     width: &apos;25%&apos;</span>\n<span class=\"hljs-comment\">//   }</span>\n<span class=\"hljs-comment\">// }</span></pre><p>This helps create a succinct syntax for use in React components.</p>\n<pre><span class=\"hljs-comment\">// Example</span>\n&lt;Box width={[ <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>/<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>/<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>/<span class=\"hljs-number\">4</span> ]} /&gt;</pre><p>Arrays work for any understyle property,\nand null values can be passed to the array to skip breakpoints.</p>\n<pre>_style({\n  margin: [ <span class=\"hljs-number\">0</span>, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-number\">16</span>, <span class=\"hljs-number\">32</span> ],\n  padding: [ <span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-number\">16</span>, <span class=\"hljs-number\">32</span> ],\n  border: [ <span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">true</span> ]\n})</pre><h3>Shorthand Props</h3>\n<p>Understyle provides shorthand props for setting common styles.\nEach shorthand prop accepts a boolean value.</p>\n<pre>_style({\n  mb4: <span class=\"hljs-literal\">true</span>\n})</pre><p>These are provided as a convenience for use in React.</p>\n<pre><span class=\"hljs-comment\">// Example</span>\n&lt;Button mb4 /&gt;</pre><p>The following boolean keys can be passed to understyle.</p>\n<ul>\n<li><code>block</code> - display block</li>\n<li><code>inlineBlock</code> - display inline-block</li>\n<li><code>inline</code></li>\n<li><code>table</code></li>\n<li><code>tableRow</code></li>\n<li><code>tableCell</code></li>\n<li><code>flex</code></li>\n<li><code>inlineFlex</code></li>\n<li><code>m0</code> - <code>m4</code>   - margin</li>\n<li><code>mt0</code> - <code>mt4</code> - margin-top</li>\n<li><code>mr0</code> - <code>mr4</code> - margin-right</li>\n<li><code>mb0</code> - <code>mb4</code> - margin-bottom</li>\n<li><code>ml0</code> - <code>ml4</code> - margin-left</li>\n<li><code>p0</code> - <code>p4</code>   - padding</li>\n<li><code>pt0</code> - <code>pt4</code> - padding-top</li>\n<li><code>pr0</code> - <code>pr4</code> - padding-right</li>\n<li><code>pb0</code> - <code>pb4</code> - padding-bottom</li>\n<li><code>pl0</code> - <code>pl4</code> - padding-left</li>\n<li><code>left</code> - text align left</li>\n<li><code>center</code> - text align center</li>\n<li><code>right</code> - text align right</li>\n<li><code>justify</code> - text align justify</li>\n<li><code>bg</code> - background color</li>\n<li><code>&lt;COLOR&gt;</code> - foreground color - e.g. <code>red</code></li>\n<li><code>bg&lt;COLOR&gt;</code> - background color - e.g. <code>bgRed</code></li>\n<li><code>border&lt;COLOR&gt;</code> - border color - e.g. <code>borderRed</code></li>\n</ul>\n<p><a href=\"LICENSE.md\">MIT License</a></p>\n"
    },
    {
      "component": "footer",
      "links": [
        {
          "href": "https://github.com/jxnblk/understyle",
          "text": "GitHub"
        },
        {
          "href": "https://github.com/jxnblk",
          "text": "jxnblk"
        }
      ]
    }
  ]
}